{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Constants from \"../Constants\";\nimport Imagens from \"../assets/Imagens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Cell = function (_Component) {\n  _inherits(Cell, _Component);\n\n  var _super = _createSuper(Cell);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _super.call(this, props);\n\n    _this.revealWithoutCallback = function () {\n      if (_this.state.revealed) {\n        return;\n      }\n\n      _this.setState({\n        revealed: true\n      });\n    };\n\n    _this.onReveal = function (userInitiated) {\n      if (_this.state.revealed) {\n        return;\n      }\n\n      if (_this.state.banner) {\n        return;\n      }\n\n      if (!userInitiated && _this.state.isMine) {\n        return;\n      }\n\n      _this.setState({\n        revealed: true\n      }, function () {\n        if (_this.state.isMine) {\n          _this.props.onDie();\n        } else {\n          if (_this.state.revealed && !_this.state.counted) {\n            Constants.TILE_COUNTER++;\n            _this.state.counted = true;\n          }\n\n          _this.props.onReveal(_this.props.x, _this.props.y);\n\n          if (Constants.TILE_COUNTER === 92) {\n            _this.props.onWin();\n          }\n        }\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        revealed: false,\n        isMine: 0,\n        neighboors: null,\n        counted: false,\n        banner: false\n      });\n    };\n\n    _this.state = {\n      revealed: false,\n      isMine: 0,\n      neighboors: null,\n      counted: false,\n      banner: false\n    };\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.revealed && !this.state.banner) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.onReveal(true);\n          },\n          onLongPress: function onLongPress() {\n            _this2.setState({\n              banner: true\n            });\n          },\n          children: _jsx(View, {\n            style: [styles.cell, {\n              width: this.props.width,\n              height: this.props.height\n            }]\n          })\n        });\n      } else if (this.state.banner) {\n        return _jsx(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            _this2.setState({\n              banner: false\n            });\n          },\n          children: _jsx(View, {\n            style: [styles.cell, {\n              width: this.props.width,\n              height: this.props.height\n            }],\n            children: _jsx(Image, {\n              source: Imagens.banner,\n              style: {\n                width: this.props.width / 1.5,\n                height: this.props.height,\n                alignContent: 'center'\n              },\n              resizeMode: \"contain\"\n            })\n          })\n        });\n      } else {\n        var content = null;\n\n        if (this.state.isMine) {\n          content = _jsx(Image, {\n            source: Imagens.mine,\n            style: {\n              width: this.props.width,\n              height: this.props.height\n            },\n            resizeMode: \"contain\"\n          });\n        } else if (this.state.neighboors) {\n          if (this.state.neighboors == 1) {\n            content = _jsx(Text, {\n              style: {\n                color: 'blue'\n              },\n              children: this.state.neighboors\n            });\n          } else if (this.state.neighboors == 2) {\n            content = _jsx(Text, {\n              style: {\n                color: 'green'\n              },\n              children: this.state.neighboors\n            });\n          } else if (this.state.neighboors == 3) {\n            content = _jsx(Text, {\n              style: {\n                color: 'red'\n              },\n              children: this.state.neighboors\n            });\n          } else {\n            content = _jsx(Text, {\n              children: this.state.neighboors\n            });\n          }\n        }\n\n        return _jsx(View, {\n          style: [styles.cellRevealed, {\n            width: this.props.width,\n            height: this.props.height\n          }],\n          children: content\n        });\n      }\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport { Cell as default };\nvar styles = StyleSheet.create({\n  cell: {\n    backgroundColor: '#bdbdbd',\n    borderWidth: 3,\n    borderTopColor: '#ffffff',\n    borderLeftColor: '#ffffff',\n    borderRightColor: '#7d7d7d',\n    borderBottomColor: '#7d7d7d'\n  },\n  cellRevealed: {\n    backgroundColor: '#ffffff',\n    borderWidth: 1,\n    borderColor: '#7d7d7d',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","Component","Constants","Imagens","Cell","props","revealWithoutCallback","state","revealed","setState","onReveal","userInitiated","banner","isMine","onDie","counted","TILE_COUNTER","x","y","onWin","reset","neighboors","styles","cell","width","height","alignContent","content","mine","color","cellRevealed","StyleSheet","create","backgroundColor","borderWidth","borderTopColor","borderLeftColor","borderRightColor","borderBottomColor","borderColor","alignItems","justifyContent"],"sources":["C:/Workspace/MineSweeper/components/Cell.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    Text\r\n} from 'react-native';\r\nimport Constants from '../Constants';\r\nimport Imagens from '../assets/Imagens';\r\n\r\nexport default class Cell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            revealed: false,\r\n            isMine: 0,\r\n            neighboors: null,\r\n            counted: false,\r\n            banner: false\r\n        }\r\n    }\r\n\r\n    revealWithoutCallback = () => {\r\n        if (this.state.revealed) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            revealed: true\r\n        })\r\n    }\r\n\r\n    onReveal = (userInitiated) => {\r\n        if (this.state.revealed) {\r\n            return;\r\n        }\r\n        if (this.state.banner) {\r\n            return;\r\n        }\r\n        if (!userInitiated && this.state.isMine) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            revealed: true\r\n        }, () => {\r\n            if (this.state.isMine) {\r\n                this.props.onDie();\r\n            } else {\r\n                if (this.state.revealed && !this.state.counted) {\r\n                    Constants.TILE_COUNTER++;\r\n                    this.state.counted = true;\r\n                }\r\n                this.props.onReveal(this.props.x, this.props.y);\r\n                if (Constants.TILE_COUNTER === 92) {\r\n                    this.props.onWin();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            revealed: false,\r\n            isMine: 0,\r\n            neighboors: null,\r\n            counted: false,\r\n            banner: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.revealed && !this.state.banner) {\r\n            return (\r\n                <TouchableOpacity onPress={() => { this.onReveal(true); }} onLongPress={() => {this.setState({banner:true})}}>\r\n                    <View style={[styles.cell, { width: this.props.width, height: this.props.height }]}>\r\n\r\n                    </View>\r\n                </TouchableOpacity>\r\n            )\r\n        }\r\n        else if (this.state.banner) {\r\n            return (\r\n                <TouchableOpacity onLongPress={() => {this.setState({banner:false})}}>\r\n                    <View style={[styles.cell, { width: this.props.width, height: this.props.height }]}>\r\n                        <Image source={Imagens.banner} style={{ width: this.props.width/1.5, height: this.props.height, alignContent: 'center'}} resizeMode=\"contain\" />\r\n                    </View>\r\n                </TouchableOpacity>\r\n            )\r\n        }\r\n        else {\r\n            let content = null;\r\n\r\n            if (this.state.isMine) {\r\n                content = (\r\n                    <Image source={Imagens.mine} style={{ width: this.props.width, height: this.props.height }} resizeMode=\"contain\" />\r\n                )\r\n            } else if (this.state.neighboors) {\r\n                if (this.state.neighboors == 1) {\r\n                    content = (\r\n                        <Text style={{ color: 'blue' }}>{this.state.neighboors}</Text>\r\n                    )\r\n                }\r\n                else if (this.state.neighboors == 2) {\r\n                    content = (\r\n                        <Text style={{ color: 'green' }}>{this.state.neighboors}</Text>\r\n                    )\r\n                }\r\n                else if (this.state.neighboors == 3) {\r\n                    content = (\r\n                        <Text style={{ color: 'red' }}>{this.state.neighboors}</Text>\r\n                    )\r\n                } else {\r\n                    content = (\r\n                        <Text>{this.state.neighboors}</Text>\r\n                    )\r\n                }\r\n            }\r\n\r\n            return (\r\n                <View style={[styles.cellRevealed, { width: this.props.width, height: this.props.height }]}>\r\n                    {content}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cell: {\r\n        backgroundColor: '#bdbdbd',\r\n        borderWidth: 3,\r\n        borderTopColor: '#ffffff',\r\n        borderLeftColor: '#ffffff',\r\n        borderRightColor: '#7d7d7d',\r\n        borderBottomColor: '#7d7d7d'\r\n    },\r\n    cellRevealed: {\r\n        backgroundColor: '#ffffff',\r\n        borderWidth: 1,\r\n        borderColor: '#7d7d7d',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}