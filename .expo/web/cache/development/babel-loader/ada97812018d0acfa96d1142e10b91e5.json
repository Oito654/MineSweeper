{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Constants from \"../Constants\";\nimport Imagens from \"../assets/Imagens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Cell = function (_Component) {\n  _inherits(Cell, _Component);\n\n  var _super = _createSuper(Cell);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _super.call(this, props);\n\n    _this.bombSeter = function () {\n      if (Constants.MAX_BOMBS_CELLS !== 0) {\n        console.log(Constants.MAX_BOMBS_CELLS);\n        var prob = Math.random() < 0.1;\n\n        if (prob) {\n          Constants.MAX_BOMBS_CELLS--;\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    _this.revealWithoutCallback = function () {\n      if (_this.state.revealed) {\n        return;\n      }\n\n      _this.setState({\n        revealed: true\n      });\n    };\n\n    _this.onReveal = function (userInitiated) {\n      if (_this.state.revealed) {\n        return;\n      }\n\n      if (!userInitiated && _this.state.isMine) {\n        return;\n      }\n\n      _this.setState({\n        revealed: true\n      }, function () {\n        if (_this.state.isMine) {\n          _this.props.onDie();\n        } else {\n          _this.props.onReveal(_this.props.x, _this.props.y);\n        }\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        revealed: false,\n        isMine: _this.bombSeter(),\n        neighboors: null\n      });\n    };\n\n    _this.state = {\n      revealed: false,\n      isMine: _this.bombSeter(),\n      neighboors: null\n    };\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.revealed) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.onReveal(true);\n          },\n          children: _jsx(View, {\n            style: [styles.cell, {\n              width: this.props.width,\n              height: this.props.height\n            }]\n          })\n        });\n      } else {\n        var content = null;\n\n        if (this.state.isMine) {\n          content = _jsx(Image, {\n            source: Imagens.mine,\n            style: {\n              width: this.props.width,\n              height: this.props.height\n            },\n            resizeMode: \"contain\"\n          });\n        } else if (this.state.neighboors) {\n          content = _jsx(Text, {\n            children: this.state.neighboors\n          });\n        }\n\n        return _jsx(View, {\n          style: [styles.cellRevealed, {\n            width: this.props.width,\n            height: this.props.height\n          }],\n          children: content\n        });\n      }\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport { Cell as default };\nvar styles = StyleSheet.create({\n  cell: {\n    backgroundColor: '#bdbdbd',\n    borderWidth: 3,\n    borderTopColor: '#ffffff',\n    borderLeftColor: '#ffffff',\n    borderRightColor: '#7d7d7d',\n    borderBottomColor: '#7d7d7d'\n  },\n  cellRevealed: {\n    backgroundColor: '#bdbdbd',\n    borderWidth: 1,\n    borderColor: '#7d7d7d',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","Component","Constants","Imagens","Cell","props","bombSeter","MAX_BOMBS_CELLS","console","log","prob","Math","random","revealWithoutCallback","state","revealed","setState","onReveal","userInitiated","isMine","onDie","x","y","reset","neighboors","styles","cell","width","height","content","mine","cellRevealed","StyleSheet","create","backgroundColor","borderWidth","borderTopColor","borderLeftColor","borderRightColor","borderBottomColor","borderColor","alignItems","justifyContent"],"sources":["C:/Workspace/MineSweeper/components/Cell.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    Text,\r\n    Alert\r\n} from 'react-native';\r\nimport Constants from '../Constants';\r\nimport Imagens from '../assets/Imagens';\r\n\r\nexport default class Cell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            revealed: false,\r\n            isMine: this.bombSeter(),\r\n            neighboors: null\r\n        }\r\n    }\r\n\r\n    bombSeter = () => {\r\n        if(Constants.MAX_BOMBS_CELLS !== 0){\r\n            console.log(Constants.MAX_BOMBS_CELLS);\r\n            let prob = Math.random() < 0.1;\r\n            if(prob){\r\n                Constants.MAX_BOMBS_CELLS--;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    revealWithoutCallback = () => {\r\n        if (this.state.revealed) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            revealed: true\r\n        })\r\n    }\r\n\r\n    onReveal = (userInitiated) => {\r\n        if (this.state.revealed) {\r\n            return;\r\n        }\r\n\r\n        if (!userInitiated && this.state.isMine) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            revealed: true\r\n        }, () => {\r\n            if (this.state.isMine) {\r\n                this.props.onDie();\r\n            } else {\r\n                this.props.onReveal(this.props.x, this.props.y);\r\n            }\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            revealed: false,\r\n            isMine: this.bombSeter(),\r\n            neighboors: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.revealed) {\r\n            return (\r\n                <TouchableOpacity onPress={() => { this.onReveal(true); }}>\r\n                    <View style={[styles.cell, { width: this.props.width, height: this.props.height }]}>\r\n\r\n                    </View>\r\n                </TouchableOpacity>\r\n            )\r\n        } else {\r\n            let content = null;\r\n\r\n            if (this.state.isMine) {\r\n                content = (\r\n                    <Image source={Imagens.mine} style={{ width: this.props.width, height: this.props.height }} resizeMode=\"contain\" />\r\n                )\r\n            } else if (this.state.neighboors) {\r\n                content = (\r\n                    <Text>{this.state.neighboors}</Text>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <View style={[styles.cellRevealed, { width: this.props.width, height: this.props.height }]}>\r\n                    {content}\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cell: {\r\n        backgroundColor: '#bdbdbd',\r\n        borderWidth: 3,\r\n        borderTopColor: '#ffffff',\r\n        borderLeftColor: '#ffffff',\r\n        borderRightColor: '#7d7d7d',\r\n        borderBottomColor: '#7d7d7d'\r\n    },\r\n    cellRevealed: {\r\n        backgroundColor: '#bdbdbd',\r\n        borderWidth: 1,\r\n        borderColor: '#7d7d7d',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}